"use strict";(self.webpackChunkbuilders_eth=self.webpackChunkbuilders_eth||[]).push([[8297],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),p=a,b=d["".concat(o,".").concat(p)]||d[p]||m[p]||i;return t?r.createElement(b,u(u({ref:n},c),{},{components:t})):r.createElement(b,u({ref:n},c))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,u=new Array(i);u[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,u[1]=l;for(var s=2;s<i;s++)u[s]=t[s];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2360:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7294),a=t(6010),i="tabItem_OmH5";function u(e){var n=e.children,t=e.hidden,u=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,u),hidden:t},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return p}});var r=t(7462),a=t(7294),i=t(2389),u=t(7392),l=t(7094),o=t(2466),s=t(6010),c="tabList_uSqn",m="tabItem_LplD";function d(e){var n,t,i,d=e.lazy,p=e.block,b=e.defaultValue,f=e.values,v=e.groupId,y=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),x=(0,u.l)(h,(function(e,n){return e.value===n.value}));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===b?b:null!=(n=null!=b?b:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=g[0])?void 0:i.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,l.U)(),E=T.tabGroupChoices,O=T.setTabGroupChoices,w=(0,a.useState)(k),N=w[0],D=w[1],M=[],j=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var P=E[v];null!=P&&P!==N&&h.some((function(e){return e.value===P}))&&D(P)}var I=function(e){var n=e.currentTarget,t=M.indexOf(n),r=h[t].value;r!==N&&(j(n),D(r),null!=v&&O(v,r))},Z=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=M.indexOf(e.currentTarget)+1;t=M[r]||M[0];break;case"ArrowLeft":var a=M.indexOf(e.currentTarget)-1;t=M[a]||M[M.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,s.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},y)},h.map((function(e){var n=e.value,t=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:function(e){return M.push(e)},onKeyDown:Z,onFocus:I,onClick:I},i,{className:(0,s.Z)("tabs__item",m,null==i?void 0:i.className,{"tabs__item--active":N===n})}),null!=t?t:n)}))),d?(0,a.cloneElement)(g.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function p(e){var n=(0,i.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},6698:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return p}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),u=t(9877),l=t(2360),o=["components"],s={sidebar_position:7},c="Maximum and Minimum Numbers",m={unversionedId:"solidity-101/language-building-blocks/Data-Types/max-and-min-numbers",id:"solidity-101/language-building-blocks/Data-Types/max-and-min-numbers",title:"Maximum and Minimum Numbers",description:"Maximum numbers and minimum numbers",source:"@site/docs/solidity-101/2-language-building-blocks/2-Data-Types/13-max-and-min-numbers.mdx",sourceDirName:"solidity-101/2-language-building-blocks/2-Data-Types",slug:"/solidity-101/language-building-blocks/Data-Types/max-and-min-numbers",permalink:"/docs/solidity-101/language-building-blocks/Data-Types/max-and-min-numbers",draft:!1,editUrl:"https://github.com/tesla809/BuildersETH/issues/docs/solidity-101/2-language-building-blocks/2-Data-Types/13-max-and-min-numbers.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Number Sizes",permalink:"/docs/solidity-101/language-building-blocks/Data-Types/integer-and-unsigned-integer-sizes"},next:{title:"Bytes",permalink:"/docs/solidity-101/language-building-blocks/Data-Types/bytes"}},d={},p=[{value:"Uses of Max and Min",id:"uses-of-max-and-min",level:2}],b={toc:p};function f(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"maximum-and-minimum-numbers"},"Maximum and Minimum Numbers"),(0,i.kt)("p",null,"Maximum numbers and minimum numbers"),(0,i.kt)(u.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"sol",label:"Solidity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract MinMax {\n    // minimum and maximum of int\n    // max int = ENTER NUMBER\n    // min int = ENTER NUMBER\n    int public minInt = type(int).min;\n    int public maxInt = type(int).max;\n\n}\n")))),(0,i.kt)("h2",{id:"uses-of-max-and-min"},"Uses of Max and Min"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Add more content")))}f.isMDXComponent=!0}}]);